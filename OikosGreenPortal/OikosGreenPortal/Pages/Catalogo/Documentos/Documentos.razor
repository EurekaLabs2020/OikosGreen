@page "/catalogo/documentos"

@inherits DocumentosBase
@attribute [Authorize]

<TituloComponent _titulo="Documentos"></TituloComponent>

<div class="container">
    <div class="row">
        <DataGrid TItem="Documento_data" Data="@_lista" ShowPager="true" @bind-SelectedRow="@_regActual"
                  Filterable="true" FilterMethod="DataGridFilterMethod.Contains" PageSize="5" Editable="true"
                  EditMode="DataGridEditMode.Popup" RowStyling="@estilofila" SelectedRowStyling="@filaSeleccionada"
                  RowInserted="@insertFila" RowUpdated="@updateFila"
                  UseInternalEditing="false" NewItemDefaultSetter="iniciaDatos"
                  Bordered="true" Striped="true" Responsive="true" Hoverable="true" PopupSize="ModalSize.Large" 
                  RowInserting="@insertingFila" RowUpdating="@updatingFila">

            <ChildContent>
                <DataGridCommandColumn TItem="Documento_data" CellsEditableOnEditCommand="true">
                    <NewCommandTemplate>
                        <Button Color="Color.Success" Clicked="@context.Clicked" class="btn-create">Crear</Button>
                    </NewCommandTemplate>
                    <EditCommandTemplate>
                        <Tooltip Text="Editar"><Button Color="Color.Primary" Clicked="@context.Clicked" class="edit-button"><i class="fas fa-user-edit"></i></Button></Tooltip>
                    </EditCommandTemplate>
                    <DeleteCommandTemplate>
                        <Tooltip Text=@(context.Item.active ? "Inactivar": "Activar")><Button Color="Color.Danger" Clicked="@(()=> inactiveFila(context.Item))" class="btn-active"> <i class=@(context.Item.active ? "fas fa-arrow-alt-circle-down" : "fas fa-arrow-alt-circle-up" )></i></Button></Tooltip>
                    </DeleteCommandTemplate>
                    <ClearFilterCommandTemplate> <span @onclick="@context.Clicked">Limpiar Filtro</span> </ClearFilterCommandTemplate>
                    <SaveCommandTemplate>
                        <div class="col-md-6">
                            <MensajeInPopUp Mensaje="@_Mensaje" clase="@_mensajeIsDanger"></MensajeInPopUp>
                        </div>
                        <Tooltip Text="Guardar"><button class="btn btn-info" @onclick="@context.Clicked"><i class="far fa-save"></i></button></Tooltip>
                    </SaveCommandTemplate>
                    <CancelCommandTemplate>
                        <Tooltip Text="Cancelar"><button class="btn btn-danger btn-cancel" @onclick="@context.Clicked"><i class="fas fa-window-close"></i></button></Tooltip>
                    </CancelCommandTemplate>

                </DataGridCommandColumn>

                <DataGridColumn TItem="Documento_data" Field="@nameof(Documento_data.id)" Caption="Id" Editable="false" Displayable="false" Width="100" Sortable="false" />
                <DataGridSelectColumn TItem="Documento_data" Field="@nameof(Documento_data.type)" Caption="Tipo" Editable="true" Width="150">
                    <DisplayTemplate>
                        @($"{( context as Documento_data)?.type}")
                    </DisplayTemplate>
                    <EditTemplate>
                        @{
                            //_datoTipoUbicacion = context.CellValue.ToString();
                            <Select TValue="String" SelectedValue="@((String)(((CellEditContext)context).CellValue))" SelectedValueChanged="@(v=>((CellEditContext)context).CellValue=v)">
                                <SelectItem TValue="String" Value="@("0")">SELECCCIONAR...</SelectItem>
                                @foreach (var item in _listaTipo)
                                {
                                    <SelectItem TValue="String" Value="@(item)">@item</SelectItem>
                                }
                            </Select>
                        }
                    </EditTemplate>
                </DataGridSelectColumn>
                <DataGridColumn TItem="Documento_data" Field="@nameof(Documento_data.code)" Caption="Código" Editable="true" Width="150" />
                <DataGridColumn TItem="Documento_data" Field="@nameof(Documento_data.name)" Caption="Nombre" Editable="true" Width="280">
                    <DisplayTemplate>
                        @($"{( context as Documento_data)?.name.ToUpper()} ")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridNumericColumn TItem="Documento_data" Field="@nameof(Documento_data.consecutive)" Caption="Consecutivo" Editable="true" Displayable="false" />

                <DataGridColumn TItem="Documento_data" Field="@nameof(Documento_data.typeclass)" Caption="Clase" Editable="true" Displayable="false">
                    <DisplayTemplate>
                        @($"{( (context as Documento_data)?.typeclass)} ")
                    </DisplayTemplate>
                    <EditTemplate>
                        <Select TValue="String" SelectedValue="@((String)(((CellEditContext)context).CellValue))" SelectedValueChanged="@(v=>((CellEditContext)context).CellValue=v)">
                            <SelectItem TValue="String" Value=@("0")>SELECCIONAR...</SelectItem>
                            @foreach (var item in _listaClase)
                            {
                                <SelectItem TValue="String" Value="@(item.Split('|')[0])">@item.Split('|')[1]</SelectItem>
                            }
                        </Select>
                    </EditTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Documento_data" Field="@nameof(Documento_data.affect)" Caption="Afecte" Editable="true" Displayable="false">
                    <DisplayTemplate>
                        @($"{( (context as Documento_data)?.affect)} ")
                    </DisplayTemplate>
                    <EditTemplate>
                        <Select TValue="String" SelectedValue="@((String)(((CellEditContext)context).CellValue))" SelectedValueChanged="@(v=>((CellEditContext)context).CellValue=v)">
                            <SelectItem TValue="String" Value=@("0")>SELECCIONAR...</SelectItem>
                            @foreach (var item in _listaAfecte)
                            {
                                <SelectItem TValue="String" Value="@(item.Split('|')[0])">@item.Split('|')[1]</SelectItem>
                            }
                        </Select>
                    </EditTemplate>
                </DataGridColumn>

                <DataGridSelectColumn TItem="Documento_data" Field="@nameof(Documento_data.idlist)" Caption="Lista" Editable="true" Width="150">
                    <DisplayTemplate>
                        @($"{( (context as Documento_data)?.namelist==null ? "" : ( context as Documento_data)?.namelist.ToUpper())} ")
                    </DisplayTemplate>
                    <EditTemplate>
                        @{
                            //_datoPadre = Convert.ToInt64( context.CellValue.ToString());
                            @if (_listaSecundaria != null)
                            {
                                <Select TValue="Int64" SelectedValue="@((Int64)(((CellEditContext)context).CellValue))" SelectedValueChanged="@(v=>((CellEditContext)context).CellValue=v)">
                                    <SelectItem TValue="Int64" Value="0">SELECCIONAR...</SelectItem>
                                    @foreach (var item in _listaSecundaria)
                                    {
                                        <SelectItem TValue="Int64" Value="@(item.id)">@item.name</SelectItem>
                                    }
                                </Select>
                            }
                        }
                    </EditTemplate>
                </DataGridSelectColumn>
                <DataGridColumn TItem="Documento_data" Field="@nameof(Documento_data.nature)" Caption="Naturaleza" Editable="true" Width="150" Displayable="false">
                    <DisplayTemplate>
                        @($"{( (context as Documento_data)?.nature)} ")
                    </DisplayTemplate>
                    <EditTemplate>
                        <Select TValue="String" SelectedValue="@((String)(((CellEditContext)context).CellValue))" SelectedValueChanged="@(v=>((CellEditContext)context).CellValue=v)">
                            <SelectItem TValue="String" Value=@("0")>SELECCIONAR...</SelectItem>
                            @foreach (var item in _listaAfecte)
                            {
                                <SelectItem TValue="String" Value="@(item.Split('|')[0])">@item.Split('|')[1]</SelectItem>
                            }
                        </Select>
                    </EditTemplate>

                </DataGridColumn>

                <DataGridCheckColumn TItem="Documento_data" Field="@nameof(Documento_data.hasthird)" Caption="Tiene Tercero" Editable="true" Displayable="false" Width="150">
                    <DisplayTemplate>
                        <Check @bind-Checked="@context.hasthird" TValue="Boolean" Disabled="true"></Check>
                    </DisplayTemplate>
                    <EditTemplate>
                        <Check  CheckedChanged="@(v=>((CellEditContext)context).CellValue=v)" TValue="Boolean" ></Check>
                    </EditTemplate>
                </DataGridCheckColumn>


                <DataGridCheckColumn TItem="Documento_data" Field="@nameof(Documento_data.active)" Caption="Activo" Editable="false" Width="150">
                    <DisplayTemplate>
                        <Check @bind-Checked="@context.active" TValue="Boolean" Disabled="true"></Check>
                    </DisplayTemplate>
                </DataGridCheckColumn>

            </ChildContent>

            <FirstPageButtonTemplate> <span>Prim</span> </FirstPageButtonTemplate>
            <PreviousPageButtonTemplate> <span>Ant</span> </PreviousPageButtonTemplate>
            <NextPageButtonTemplate> <span>Sig</span> </NextPageButtonTemplate>
            <LastPageButtonTemplate> <span>Ult</span> </LastPageButtonTemplate>
            <PopupTitleTemplate>
                <TituloComponent _titulo=@((context.EditState== DataGridEditState.New ? "Insertando" : "Actualizando")+ " Registro")></TituloComponent>
            </PopupTitleTemplate>

            <EmptyTemplate><div class="box"> No hay información...!!</div> </EmptyTemplate>

            <LoadingTemplate> <div class="box"><progress class="progress is-small is-primary" max="100" /></div></LoadingTemplate>

        </DataGrid>
    </div>
    <div class="row">
        <MensajeInPopUp Mensaje="@_Mensaje" clase="@_mensajeIsDanger"></MensajeInPopUp>
    </div>
</div>
